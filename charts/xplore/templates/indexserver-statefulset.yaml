apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.service.indexserver.name }}
spec:
  serviceName: {{ .Values.service.indexserver.name }}
  #only support 1 replica here
  replicas: 1
  selector:
    matchLabels:
      xplore/app: {{ .Values.service.indexserver.name }}
      xplore/name: {{ .Chart.Name }}
      xplore/release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        xplore/app: {{ .Values.service.indexserver.name }}
        xplore/name: {{ .Chart.Name }}
        xplore/release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.serviceAccountName }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{ end }}    
      containers:
      {{- if and (eq .Values.graylog.enable true) (eq .Values.indexserver.persistLogs false) }}
        - name: xplore-sidecar
          image: "{{ .Values.graylog.image }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: GRAYLOG_SERVER
            value: {{ .Values.graylog.server | quote }}
          - name: GRAYLOG_PORT
            value: {{ .Values.graylog.port | quote }}
          - name: TAGS
            value: "[\"linux\",\"apache\"]"
          - name: NODE_NAME
            valueFrom:
              fieldRef: 
                fieldPath: spec.nodeName
          - name: NAMESPACE_NAME
            valueFrom:
              fieldRef: 
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef: 
                fieldPath: metadata.name
          volumeMounts:
          - mountPath: /pod-data
            name: xplore-logs   
        {{- end}}   
        - name: xplore-indexserver
          image: "{{ .Values.image.repository }}/{{ .Values.image.indexserver.name }}:{{ .Values.image.indexserver.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SERVICE_NAME
              value: {{ .Values.service.indexserver.name }}
            - name: PERSIST_LOGS            
              value: {{ .Values.indexserver.persistLogs | quote }}
            {{- if (.Values.indexserver.extConfPath)}}
            - name: EXT_CONF_PATH
              value: {{ .Values.indexserver.extConfPath }}
            {{- end }}
            - name: CONFIG_NEW_RELIC
              value: {{ .Values.newRelic.enable | quote }}
            {{- if (.Values.newRelic.appNameSuffix) }}
            - name: NEW_RELIC_APP_NAME_SUFFIX
              value: {{ .Values.newRelic.appNameSuffix | quote }}
            {{- end }}
            {{- if (.Values.newRelic.rootPath) }}
            - name: NEW_RELIC_ROOT
              value: {{ .Values.newRelic.rootPath | quote }}
            {{- end }}
            {{- range $key, $value := .Values.indexserver.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: is-port
              containerPort: {{ .Values.service.indexserver.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /dsearch/health/liveness
              port: {{ .Values.service.indexserver.targetPort }}
            initialDelaySeconds: {{ .Values.indexserver.livenessProbe.initialDelay }}
            timeoutSeconds: {{ .Values.indexserver.livenessProbe.timeout }}
            periodSeconds: {{ .Values.indexserver.livenessProbe.period }}
            failureThreshold: {{ .Values.indexserver.livenessProbe.failure }}
          readinessProbe:
            httpGet:
              path: /dsearch/health/readiness
              port: {{ .Values.service.indexserver.targetPort }}
            initialDelaySeconds: {{ .Values.indexserver.readinessProbe.initialDelay }}
            timeoutSeconds: {{ .Values.indexserver.readinessProbe.timeout }}
            periodSeconds: {{ .Values.indexserver.readinessProbe.period }}
            failureThreshold: {{ .Values.indexserver.readinessProbe.failure }}
          resources:
            requests:
              memory: {{ .Values.resources.indexserver.requests.memory | quote }}
              cpu: {{ .Values.resources.indexserver.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.indexserver.limits.memory | quote }}
              cpu: {{ .Values.resources.indexserver.limits.cpu | quote }}
          volumeMounts:
            - name: xplore-data
              mountPath: /root/xPlore/rtdata
              subPath: {{ .Values.volumeMounts.subPath }}
            {{- if eq .Values.newRelic.enable true }}
            - name: new-relic-config-map
              {{- if (.Values.indexserver.extConfPath)}}
              mountPath: {{ .Values.indexserver.extConfPath }}/newrelic.yml
              {{- else }}
              mountPath: /root/xPlore/external-configurations/newrelic.yml
              {{- end }}
              subPath: newrelic.yml
            {{- end }}
            {{- if and (eq .Values.graylog.enable true) (eq .Values.indexserver.persistLogs false) }}
            - name: xplore-logs
              mountPath: /root/xPlore/logs/    
            {{- end }}
            {{- if and (.Values.customVolume.customMountPath) (.Values.customVolume.customClaimName)}}
            - name: custom-files
              mountPath: {{ .Values.customVolume.customMountPath }}
            {{- end }}               
      volumes:
        - name: xplore-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolume.claimName }}
        {{- if eq .Values.newRelic.enable true }}
        - name: new-relic-config-map
          configMap:
            name: {{ .Values.newRelic.configMap.name }}
            items:
              - key: {{ .Values.newRelic.configMap.key.newRelicConfigKey }}
                path: newrelic.yml
        {{- end }}
        {{- if and (eq .Values.graylog.enable true) (eq .Values.indexserver.persistLogs false) }}
        - name: xplore-logs
          emptyDir: {}
        {{- end }}
        {{- if and (.Values.customVolume.customMountPath) (.Values.customVolume.customClaimName)}}
        - name: custom-files
          persistentVolumeClaim:
            claimName: {{ .Values.customVolume.customClaimName }}
        {{- end }}
