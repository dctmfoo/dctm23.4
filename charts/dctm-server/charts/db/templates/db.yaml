#Database StatefulSet
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMap.configName}}
data:
  entrypoint.sh: |-
    #!/bin/bash
    if [ ! -z $MAX_CONNECTIONS ]
    then
        echo 'alter system set max_connections = {{ .Values.alterParam.max_connections }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $SHARED_BUFFERS ]
    then
        echo 'alter system set shared_buffers = {{ .Values.alterParam.shared_buffers | quote }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $DEFAULT_STATISTICS_TARGET ]
    then
        echo 'alter system set default_statistics_target = {{ .Values.alterParam.default_statistics_target }} ;' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $MAINTENANCE_WORK_MEM ]
    then
        echo 'alter system set maintenance_work_mem = {{ .Values.alterParam.maintenance_work_mem | quote }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $EFFECTIVE_CACHE_SIZE ]
    then
        echo 'alter system set effective_cache_size = {{ .Values.alterParam.effective_cache_size | quote }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $WAL_BUFFERS ]
    then
        echo 'alter system set wal_buffers = {{ .Values.alterParam.wal_buffers | quote }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    if [ ! -z $WORK_MEM ]
    then
        echo 'alter system set work_mem = {{ .Values.alterParam.work_mem | quote }};' >> /docker-entrypoint-initdb.d/alter_param.sql
    fi
    
    if [ "$IS_OPENSHIFT" != "true" ]
    then
      if [ "$ROOT_SQUASH_ENABLED" = "true" ]
      then
        su postgres -c "mkdir $PGDATA"
        
        if [ "$ISPG12ORGREATER" != "true" ]
        then
          sed -i -e "s/find \"\$PGDATA\".*/ /"  /usr/local/bin/docker-entrypoint.sh
          sed -i -e "s/chmod 700 \"\$PGDATA\"/ /"  /usr/local/bin/docker-entrypoint.sh
        fi
      fi
    fi
 
    /bin/sh -c '/usr/local/bin/docker-entrypoint.sh postgres'    
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: {{ .Values.serviceName }}
spec:
  serviceName: {{ .Values.serviceName }}
  replicas: {{ .Values.database.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }}
    spec:
      containers:
      - name: {{ .Values.serviceName | quote  }}
        image: {{ .Values.images.repository }}/{{ .Values.images.db.name }}:{{ .Values.images.db.tag }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        command:
        - /bin/entrypoint.sh
        env:
        - name: ROOT_SQUASH_ENABLED
          value: {{ .Values.rootsquash.enable | quote }}
        - name: ISPG12ORGREATER
          value: {{ .Values.rootsquash.ispg12orgreater | quote }}
        - name: IS_OPENSHIFT
          value: {{ .Values.openshift.enable | quote }}        
{{ if and (eq .Values.rootsquash.enable true) (eq .Values.rootsquash.ispg12orgreater true) }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata/sub
{{ end }}
{{ if and (eq .Values.rootsquash.enable true) (eq .Values.rootsquash.ispg12orgreater false) }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
{{ end }}
        - name: MAX_CONNECTIONS
          value: {{ .Values.alterParam.max_connections | quote }}
        - name: SHARED_BUFFERS
          value: {{ .Values.alterParam.shared_buffers | quote }}
        - name: DEFAULT_STATISTICS_TARGET
          value: {{ .Values.alterParam.default_statistics_target | quote}} 
        - name: MAINTENANCE_WORK_MEM
          value: {{ .Values.alterParam.maintenance_work_mem | quote }}
        - name: EFFECTIVE_CACHE_SIZE
          value: {{ .Values.alterParam.effective_cache_size | quote }}
        - name: WAL_BUFFERS
          value: {{ .Values.alterParam.wal_buffers | quote }}
        - name: WORK_MEM
          value: {{ .Values.alterParam.work_mem | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: dbPassword
        ports:
        - containerPort: {{ .Values.database.port }}
          name: dbport
        volumeMounts:
{{ if and (eq .Values.rootsquash.enable true) (eq .Values.rootsquash.ispg12orgreater true) }}
        - name: db-data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: data
{{ end }}
        - name: db-data
          mountPath: /var/lib/postgresql/data
          subPath: data
        - name: {{ .Values.configMap.volumeName }}
          mountPath: /bin/entrypoint.sh
          readOnly: true
          subPath: entrypoint.sh
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory | quote  }}
            cpu: {{ .Values.resources.requests.cpu | quote  }}
          limits:
            memory: {{ .Values.resources.limits.memory | quote  }}
            cpu: {{ .Values.resources.limits.cpu | quote  }} 
{{- if .Values.images.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.images.pullSecrets }}
{{ end }}
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: {{ .Values.serviceName }}-pvc
        - name: {{ .Values.configMap.volumeName }}
          configMap:
            defaultMode: 0777
            name: {{ .Values.configMap.configName }}
